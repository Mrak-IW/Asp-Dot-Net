@using HomeWorkSmartHouse.SmartHouseDir.Interfaces;
@using HomeWorkSmartHouse.SmartHouseDir.Enums;

@model ISmartDevice

@{
	bool open = (Model != null) && (Model is IOpenCloseable) && (Model as IOpenCloseable).IsOpened;
	bool on = (Model != null) && (Model.State == EPowerState.On);
	HtmlString openAttr = new HtmlString(open ? "open=\"open\"" : "");
	HtmlString onAttr = new HtmlString(on ? "on=\"on\"" : "");
	string devtype = Model.GetType().Name;
}

<div class="deviceContainer" id="@(Model.Name)" devtype="@devtype" @onAttr @openAttr>
	<div class="deviceBody">
		<div class="topLine">
			<div class="lblID">
				@Model.DeviceType<br />@Model.Name
			</div>
			<a href="/Home/TogglePower/@Model.Name" title="@(on ? "Выключить" : "Включить")" class="btnPower"></a>
		</div>
		<div class="devIconContainer">
			<div class="devIcon">
				@Html.Partial("Parts/Device/IHaveClock", Model)
			</div>
		</div>
		<div class="propertiesPanel">
			@Html.Partial("Parts/Device/IHaveThermostat", Model)
			@Html.Partial("Parts/Device/IBrightable", Model)
			@Html.Partial("Parts/Device/IOpenCloseable", Model)
			<div>
				<a href="/Home/Delete/@Model.Name" title="Выкинуть в окно" class="btnSwitch btnDelete">Удалить</a>
			</div>
		</div>
	</div>
</div>
